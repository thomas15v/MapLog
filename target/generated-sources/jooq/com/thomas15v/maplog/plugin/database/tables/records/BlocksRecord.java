/**
 * This class is generated by jOOQ
 */
package com.thomas15v.maplog.plugin.database.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlocksRecord extends org.jooq.impl.UpdatableRecordImpl<com.thomas15v.maplog.plugin.database.tables.records.BlocksRecord> implements org.jooq.Record9<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.sql.Timestamp, java.lang.String, byte[]> {

	private static final long serialVersionUID = 223190488;

	/**
	 * Setter for <code>maplog.blocks.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>maplog.blocks.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>maplog.blocks.X</code>.
	 */
	public void setX(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>maplog.blocks.X</code>.
	 */
	public java.lang.Integer getX() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>maplog.blocks.Y</code>.
	 */
	public void setY(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>maplog.blocks.Y</code>.
	 */
	public java.lang.Integer getY() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>maplog.blocks.z</code>.
	 */
	public void setZ(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>maplog.blocks.z</code>.
	 */
	public java.lang.Integer getZ() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>maplog.blocks.worldid</code>.
	 */
	public void setWorldid(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>maplog.blocks.worldid</code>.
	 */
	public java.lang.Integer getWorldid() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>maplog.blocks.playerid</code>.
	 */
	public void setPlayerid(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>maplog.blocks.playerid</code>.
	 */
	public java.lang.Integer getPlayerid() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>maplog.blocks.placed</code>.
	 */
	public void setPlaced(java.sql.Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>maplog.blocks.placed</code>.
	 */
	public java.sql.Timestamp getPlaced() {
		return (java.sql.Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>maplog.blocks.blockid</code>.
	 */
	public void setBlockid(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>maplog.blocks.blockid</code>.
	 */
	public java.lang.String getBlockid() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>maplog.blocks.DATA</code>.
	 */
	public void setData(byte[] value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>maplog.blocks.DATA</code>.
	 */
	public byte[] getData() {
		return (byte[]) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.sql.Timestamp, java.lang.String, byte[]> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.sql.Timestamp, java.lang.String, byte[]> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.Z;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.WORLDID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.PLAYERID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.PLACED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.BLOCKID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field9() {
		return com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getZ();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getWorldid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getPlayerid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getPlaced();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getBlockid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value9() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value2(java.lang.Integer value) {
		setX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value3(java.lang.Integer value) {
		setY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value4(java.lang.Integer value) {
		setZ(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value5(java.lang.Integer value) {
		setWorldid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value6(java.lang.Integer value) {
		setPlayerid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value7(java.sql.Timestamp value) {
		setPlaced(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value8(java.lang.String value) {
		setBlockid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord value9(byte[] value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BlocksRecord values(java.lang.Integer value1, java.lang.Integer value2, java.lang.Integer value3, java.lang.Integer value4, java.lang.Integer value5, java.lang.Integer value6, java.sql.Timestamp value7, java.lang.String value8, byte[] value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BlocksRecord
	 */
	public BlocksRecord() {
		super(com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS);
	}

	/**
	 * Create a detached, initialised BlocksRecord
	 */
	public BlocksRecord(java.lang.Integer id, java.lang.Integer x, java.lang.Integer y, java.lang.Integer z, java.lang.Integer worldid, java.lang.Integer playerid, java.sql.Timestamp placed, java.lang.String blockid, byte[] data) {
		super(com.thomas15v.maplog.plugin.database.tables.Blocks.BLOCKS);

		setValue(0, id);
		setValue(1, x);
		setValue(2, y);
		setValue(3, z);
		setValue(4, worldid);
		setValue(5, playerid);
		setValue(6, placed);
		setValue(7, blockid);
		setValue(8, data);
	}
}
