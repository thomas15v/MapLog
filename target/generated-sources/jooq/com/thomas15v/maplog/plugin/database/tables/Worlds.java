/**
 * This class is generated by jOOQ
 */
package com.thomas15v.maplog.plugin.database.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Worlds extends org.jooq.impl.TableImpl<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord> {

	private static final long serialVersionUID = 979755111;

	/**
	 * The singleton instance of <code>maplog.worlds</code>
	 */
	public static final com.thomas15v.maplog.plugin.database.tables.Worlds WORLDS = new com.thomas15v.maplog.plugin.database.tables.Worlds();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord> getRecordType() {
		return com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord.class;
	}

	/**
	 * The column <code>maplog.worlds.id</code>.
	 */
	public final org.jooq.TableField<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>maplog.worlds.UUID</code>.
	 */
	public final org.jooq.TableField<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord, java.util.UUID> UUID = createField("UUID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>maplog.worlds.worldname</code>.
	 */
	public final org.jooq.TableField<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord, java.lang.String> WORLDNAME = createField("worldname", org.jooq.impl.SQLDataType.CHAR.length(128).nullable(false), this, "");

	/**
	 * Create a <code>maplog.worlds</code> table reference
	 */
	public Worlds() {
		this("worlds", null);
	}

	/**
	 * Create an aliased <code>maplog.worlds</code> table reference
	 */
	public Worlds(java.lang.String alias) {
		this(alias, com.thomas15v.maplog.plugin.database.tables.Worlds.WORLDS);
	}

	private Worlds(java.lang.String alias, org.jooq.Table<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Worlds(java.lang.String alias, org.jooq.Table<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.thomas15v.maplog.plugin.database.Maplog.MAPLOG, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord, java.lang.Integer> getIdentity() {
		return com.thomas15v.maplog.plugin.database.Keys.IDENTITY_WORLDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord> getPrimaryKey() {
		return com.thomas15v.maplog.plugin.database.Keys.KEY_WORLDS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.thomas15v.maplog.plugin.database.tables.records.WorldsRecord>>asList(com.thomas15v.maplog.plugin.database.Keys.KEY_WORLDS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.thomas15v.maplog.plugin.database.tables.Worlds as(java.lang.String alias) {
		return new com.thomas15v.maplog.plugin.database.tables.Worlds(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.thomas15v.maplog.plugin.database.tables.Worlds rename(java.lang.String name) {
		return new com.thomas15v.maplog.plugin.database.tables.Worlds(name, null);
	}
}
